#! /usr/bin/env python2.7

import argparse
import gzip
import os
from Bio import SeqIO, Seq, SeqRecord

def main():
	parser = argparse.ArgumentParser( )
	parser.add_argument( "-r", "--reference-dir", dest= "reference_dir", required= True, type= str, help= ("directory that store the reference genome") )
	parser.add_argument( "-s", "--sequences", dest="sequence_filename", required= True, type= str, help= ("sequence file generated by shatterbam") )

	args = parser.parse_args( )

	sections_in=open(args.sequence_filename, 'r')
	for line in sections_in.readlines():
		chr_name = "chr" + line.split(":")[0]
 		if not os.path.exists(chr_name):
			os.makedirs(chr_name)
 		start, end = line.replace("\n", "" ).split(":")[1].split("-")
		print "> Creating section [{0}, {1}] of {2}".format(start, end, chr_name)
		fasta_in= SeqIO.read( gzip.GzipFile( args.reference_dir + chr_name + ".fa.gz", "r" ), "fasta" )
		file_output= open("{0}/{1}-{2}-{3}.fa".format(chr_name, chr_name, start, end), 'w')
		startp = 0 if int(start) == 0 else int(start)
		endp = int(end)
		seq= fasta_in.seq[startp:endp]
		seqrecord=SeqRecord.SeqRecord(seq, "{0}:{1}:{2}:+1".format(chr_name, startp+1, endp), "", "")
		SeqIO.write(seqrecord, file_output, "fasta")
		# file_output.write(str(seq))

if __name__ == "__main__":
	main()
